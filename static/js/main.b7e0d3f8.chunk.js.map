{"version":3,"sources":["images/i-a.jpg","images/bus-a.jpg","images/i-b.jpg","images/web-1.jpg","images/i-c.jpg","images/i-d.jpg","images/web-2.jpg","images/about-1.jpg","Commom.jsx","Home.jsx","Sdata.jsx","Card.jsx","Service.jsx","About.jsx","Contact.jsx","Navbar.jsx","Footer.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","Commom","props","id","className","class","name","to","visit","btname","src","imgsrc","alt","Home","web","Sdata","tittle","Software","App","Android","Marketing","SEO","Card","Service","map","val","ind","key","About","Contact","useState","fullname","phone","email","msg","data","setData","InputEvent","event","target","value","preVal","onSubmit","e","preventDefault","alert","for","type","onChange","placeholder","rows","Navbar","claasName","data-toggle","data-target","aria-controls","aria-expanded","aria-label","activeClassName","exact","aria-current","Footer","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b7e0d3f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/i-a.db27a4be.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bus-a.d3affe8b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/i-b.d8c041e5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/web-1.37416858.jpg\";","module.exports = __webpack_public_path__ + \"static/media/i-c.4fbe4b58.jpg\";","module.exports = __webpack_public_path__ + \"static/media/i-d.e68ae629.jpg\";","module.exports = __webpack_public_path__ + \"static/media/web-2.4a4bbd80.jpg\";","module.exports = __webpack_public_path__ + \"static/media/about-1.e3da5f6c.jpg\";","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst  Commom = (props) => {\r\n    return (\r\n        <>\r\n        <section id=\"header\" className=\"d-flex align-items-center\">\r\n            <div className=\"container-fluid nav_bg\">\r\n                <div class=\"row\">\r\n                    <div className=\"col-10 mx-auto big-div\">\r\n                        <div className=\"row\">\r\n                        <div className=\"col-md-6 pt-5  pt-lg-0 order-2 order-lg-1 d-flex justify-content-center flex-column f-div\">\r\n                            <h1>{props.name} <strong className=\"brand-name\">Faiztech </strong> </h1>\r\n                            <h2 className=\"my-3\">we are the talented web developer making website</h2>\r\n                            <div  className=\"mt-4\">\r\n    <NavLink to={props.visit} className=\"btn-get-started\">{props.btname}</NavLink>\r\n                            \r\n                            </div>\r\n\r\n                        </div>\r\n                        \r\n                        \r\n                        <div className=\"col-lg-6  order-1 order-lg-2 header-img d-flex justify-content-center\">\r\n                            <img src={props.imgsrc} className=\"img-fluid animated\" alt=\"home-img \" />\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                \r\n            \r\n            </section>\r\n        \r\n        </>\r\n    );\r\n};\r\nexport default Commom;","import React from \"react\";\r\nimport web from \"../src/images/bus-a.jpg\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Commom from \"./Commom\";\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n       <Commom\r\n        name=\"Grow your business with\"\r\n        imgsrc={web}\r\n        visit=\"/service\"\r\n        btname=\"Get Started\"\r\n       \r\n       />\r\n        \r\n        </>\r\n    );\r\n};\r\nexport default Home;","import web from \"../src/images/i-a.jpg\";\r\nimport App from \"../src/images/i-b.jpg\";\r\nimport Android from \"../src/images/web-1.jpg\";\r\nimport Marketing from \"../src/images/i-c.jpg\";\r\nimport SEO from \"../src/images/i-d.jpg\";\r\nimport Software from \"../src/images/web-2.jpg\";\r\nconst Sdata=[\r\n    {\r\n    imgsrc: web,\r\n    tittle:\"web development\",\r\n    },\r\n    {\r\n        imgsrc: Software,\r\n        tittle:\"Software development\",\r\n        },\r\n        {\r\n            imgsrc: App,\r\n            tittle:\"App development\",\r\n            },\r\n            {\r\n                imgsrc: Android,\r\n                tittle:\"Android development\",\r\n                },\r\n                {\r\n                    imgsrc: Marketing,\r\n                    tittle:\"Marketing\",\r\n                    },\r\n                    {\r\n                        imgsrc: SEO,\r\n                        tittle:\"SEO\",\r\n                        },\r\n\r\n];\r\nexport default Sdata;\r\n","import React from \"react\";\r\nimport web from \"../src/images/i-a.jpg\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst Card= (props) => {\r\n    return (\r\n        <>\r\n            \r\n                        \r\n                            <div className=\"col-md-4 col-10 mx-auto\">\r\n                                <div className=\"card\">\r\n                                    <img src={props.imgsrc} class=\"card-img-top\" alt={props.imgsrc} />\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title font-weigth-bold\">{props.tittle}</h5>\r\n                                        <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                                        <NavLink to=\"#\" className=\"btn btn-primary\">Read More</NavLink>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        \r\n                        \r\n                    \r\n                \r\n            \r\n        </>\r\n    );\r\n};\r\nexport default Card;","import React from \"react\";\r\nimport Sdata from \"./Sdata\";\r\nimport Card from \"./Card\";\r\nconst Service = () => {\r\n    return (\r\n        <>\r\n            <div className=\"my-5\">\r\n                <h1 className=\"text-center\">our services</h1>\r\n            </div>\r\n            <div className=\"container-fluid mb-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-10 mx-auto\">\r\n                        <div className=\"row gy-4\">\r\n                        {\r\n                            Sdata.map((val,ind) => {\r\n                                return <Card\r\n                                key={ind}\r\n                                imgsrc={val.imgsrc}\r\n                                tittle={val.tittle}\r\n                                />\r\n                             })\r\n                        }\r\n                           \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default Service;","import React from \"react\";\r\nimport web from \"../src/images/about-1.jpg\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Commom from \"./Commom\";\r\nconst About = () => {\r\n    return (\r\n        <>\r\n        <Commom\r\n        name=\"welcome to about page\"\r\n        imgsrc={web}\r\n        visit=\"/contact\"\r\n        btname=\"Contact Now\"\r\n\r\n        \r\n        />\r\n        </>\r\n    );\r\n};\r\nexport default About;","import React, { useState } from \"react\";\r\nconst Contact = () => {\r\n    const [data,setData] = useState ({\r\n        fullname:\" \",\r\n        phone:\" \",\r\n        email:\" \",\r\n        msg:\" \",\r\n\r\n    });\r\n    const InputEvent = (event) =>{\r\n        const { name,value } = event.target;\r\n        setData((preVal) =>{\r\n            return {\r\n                ...preVal,\r\n                [name] : value,\r\n            }\r\n\r\n\r\n        })\r\n    };\r\n\r\n    const formSubmit = (e) =>{\r\n        e.preventDefault();\r\n        alert(` my name is ${data.fullname},mymboile number is ${data.phone},my email id is ${data.email},what i want to say ${data.msg}`);\r\n\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"my-5\">\r\n                <h1 className=\"text-center\">Contact Us</h1>\r\n            </div>\r\n            <div className=\"container contact_div\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 col-10 mx-auto\">\r\n                        <form onSubmit={formSubmit}>\r\n                            <div className=\"mb-3\">\r\n                                <label for=\"exampleFormControlInput1\" className=\"form-label\">FullName</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput1\"\r\n                                name=\"fullname\"\r\n                                value={data.fullname}\r\n                                onChange={InputEvent}\r\n                                \r\n                                placeholder=\"enter your name\" />\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label for=\"exampleFormControlInput1\" className=\"form-label\">Phone Number</label>\r\n                                <input type=\"nummber\" className=\"form-control\" id=\"exampleFormControlInput1\" \r\n                                 name=\"phone\"\r\n                                 value={data.phone}\r\n                                 onChange={InputEvent}\r\n                                 \r\n                                placeholder=\"mobile number\" />\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label for=\"exampleFormControlInput1\" className=\"form-label\">Email address</label>\r\n                                <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" \r\n                                 name=\"email\"\r\n                                 value={data.email}\r\n                                 onChange={InputEvent}\r\n                                 \r\n                                placeholder=\"name@example.com\" />\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label for=\"exampleFormControlTextarea1\" className=\"form-label\">Message</label>\r\n                                <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\"\r\n                                 name=\"msg\"\r\n                                 value={data.msg}\r\n                                 onChange={InputEvent}\r\n                                 \r\n                                 rows=\"3\"></textarea>\r\n                            </div>\r\n                            <div className=\"col-12\">\r\n                                <button className=\"btn btn-outline-primary\" type=\"submit\">Submit form</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default Contact;","import React from  'react';\r\nimport { NavLink } from 'react-router-dom';\r\nconst Navbar = () => {\r\n    return (\r\n        <>\r\n        <div claasName=\"container-fluid nav-bg\">\r\n            <div className=\"row\">\r\n                <div className=\"col-10 mx-auto\">\r\n                    \r\n<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <div class=\"container-fluid\">\r\n    \r\n    <NavLink class=\"navbar-brand\" to=\"\">Faiztech</NavLink>\r\n\r\n    \r\n    <button\r\n      className=\"navbar-toggler\"\r\n      type=\"button\"\r\n      data-toggle=\"collapse\"\r\n      data-target=\"#navbarSupportedContent\"\r\n      aria-controls=\"navbarSupportedContent\"\r\n      aria-expanded=\"false\"\r\n      aria-label=\"Toggle navigation\"\r\n    >\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    \r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      \r\n      <ul className=\"navbar-nav ml-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <NavLink activeClassName=\"menu_active\"  exact className=\"nav-link \" aria-current=\"page\" to=\"/\">Home</NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <NavLink activeClassName=\"menu_active\" className=\"nav-link\" to=\"/service\">Services</NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <NavLink  activeClassName=\"menu_active\"className=\"nav-link\" to=\"/about\">About</NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <NavLink activeClassName=\"menu_active\" className=\"nav-link\" to=\"/contact\">Contact</NavLink>\r\n        </li>\r\n        </ul>\r\n        \r\n        </div>\r\n        \r\n        \r\n    \r\n    \r\n  </div>\r\n  \r\n</nav>\r\n\r\n</div>\r\n            </div>\r\n        </div>\r\n\r\n        </>\r\n    );\r\n\r\n};\r\n export default Navbar;","import React from \"react\";\r\nconst Footer = () =>\r\n{\r\n    return (\r\n        <>\r\n        <div className=\"col-10 footer_div mx-auto\">\r\n            <div class=\"row \">\r\n        <footer className=\" w-100 bg-light text-center\">\r\n        <p>Copyright 2020 Faiztech.All Rights Reserved | Terms and Condition</p>\r\n        </footer>\r\n        </div>\r\n        </div>\r\n\r\n        </>\r\n    );\r\n};\r\nexport default Footer;\r\n","import React from \"react\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\nimport Home from \"./Home\";\nimport Service from \"./Service\";\nimport About from \"./About\";\nimport Contact from \"./Contact\";\nimport Navbar from \"./Navbar\";\nimport Footer from \"./Footer\";\nimport { Switch,Route, Redirect } from \"react-router-dom\";\nconst App = () => {\n    return (\n        <>\n        <Navbar/>\n        <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/service\" component={Service} />\n            <Route exact path=\"/contact\" component={Contact} />\n            <Route  exact path=\"/about\" component={About} />\n        <Redirect to=\"/\" />\n        </Switch>\n        <Footer/>\n        \n        </>\n    );\n};\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <>\n  <BrowserRouter>\n  <App/>\n  \n  </BrowserRouter>,\n  </>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}